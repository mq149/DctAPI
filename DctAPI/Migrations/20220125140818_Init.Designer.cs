// <auto-generated />
using System;
using DctAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DctAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220125140818_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DctApi.Shared.Models.CauHoiTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("CauHoiTracNghiem");
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietCuaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AnhBiaId")
                        .HasColumnType("integer");

                    b.Property<int>("AnhDaiDienId")
                        .HasColumnType("integer");

                    b.Property<int>("CuaHangId")
                        .HasColumnType("integer");

                    b.Property<string>("MieuTaQuan")
                        .HasColumnType("text");

                    b.Property<int>("ThoiGianId")
                        .HasColumnType("integer");

                    b.Property<string>("TuKhoaTimKiem")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ThoiGianId");

                    b.ToTable("ChiTietCuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietDonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<float>("DonGia")
                        .HasColumnType("real");

                    b.Property<int>("DonHangId")
                        .HasColumnType("integer");

                    b.Property<float>("KhoiLuong")
                        .HasColumnType("real");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ChiTietCuaHangId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("DiaChiCuaHangId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("HinhChungMinhNhanDanMatSauId")
                        .HasColumnType("integer");

                    b.Property<int?>("HinhChungMinhNhanDanMatTruocId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoaiCHId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoaiHinhDangKy")
                        .HasColumnType("integer");

                    b.Property<string>("MaSoThue")
                        .HasColumnType("text");

                    b.Property<string>("SoDienThoaiLienHe")
                        .HasColumnType("text");

                    b.Property<string>("SoDienThoaiNguoiDaiDien")
                        .HasColumnType("text");

                    b.Property<string>("TenCuaHang")
                        .HasColumnType("text");

                    b.Property<string>("TenNguoiDaiDien")
                        .HasColumnType("text");

                    b.Property<bool>("TrangThaiKichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCuaHangId");

                    b.HasIndex("DiaChiCuaHangId");

                    b.HasIndex("LoaiCHId");

                    b.HasIndex("UserId");

                    b.ToTable("CuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangSanPhamEntity", b =>
                {
                    b.Property<int>("CuaHangId")
                        .HasColumnType("integer");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("CuaHangId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("CuaHangSanPham");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DonHangId")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiDGId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoDiem")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("LoaiDGId");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DiaChiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Duong")
                        .HasColumnType("text");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("text");

                    b.Property<string>("SoNhaTo")
                        .HasColumnType("text");

                    b.Property<string>("TinhTP")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("XaPhuong")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiaChi");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("CuaHangId")
                        .HasColumnType("integer");

                    b.Property<int>("DiaChiGiaoId")
                        .HasColumnType("integer");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("integer");

                    b.Property<string>("LyDoHuy")
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("NgayMuaHang")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NguoiNhan")
                        .HasColumnType("text");

                    b.Property<int>("PTTTId")
                        .HasColumnType("integer");

                    b.Property<string>("SDT")
                        .HasColumnType("text");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("integer");

                    b.Property<int>("TTDHId")
                        .HasColumnType("integer");

                    b.Property<float>("TongTien")
                        .HasColumnType("real");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CuaHangId");

                    b.HasIndex("DiaChiGiaoId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("PTTTId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("TTDHId");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.HinhAnhEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ChiTietCuaHangId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("CuaHangEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCuaHangId");

                    b.HasIndex("CuaHangEntityId");

                    b.ToTable("HinhAnh");
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BHXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int?>("BHXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXHang")
                        .HasColumnType("text");

                    b.Property<int?>("BLXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int?>("BLXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXSo")
                        .HasColumnType("text");

                    b.Property<int?>("CMNDMatSauId")
                        .HasColumnType("integer");

                    b.Property<int?>("CMNDMatTruocId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CMNDNgayCap")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CMNDNoiCap")
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool?>("DaDuyet")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("DiemBaiKiemTra")
                        .HasColumnType("numeric");

                    b.Property<int?>("GiayDKXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int?>("GiayDKXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<int?>("GiayKiemTraXeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("HoanThanh")
                        .HasColumnType("boolean");

                    b.Property<int?>("NamSXXe")
                        .HasColumnType("integer");

                    b.Property<string>("NgheNghiep")
                        .HasColumnType("text");

                    b.Property<int?>("PhuongTienHinhDauId")
                        .HasColumnType("integer");

                    b.Property<int?>("PhuongTienHinhDuoiId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipperId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BHXMatSauId");

                    b.HasIndex("BHXMatTruocId");

                    b.HasIndex("BLXMatSauId");

                    b.HasIndex("BLXMatTruocId");

                    b.HasIndex("CMNDMatSauId");

                    b.HasIndex("CMNDMatTruocId");

                    b.HasIndex("GiayDKXMatSauId");

                    b.HasIndex("GiayDKXMatTruocId");

                    b.HasIndex("GiayKiemTraXeId");

                    b.HasIndex("PhuongTienHinhDauId");

                    b.HasIndex("PhuongTienHinhDuoiId");

                    b.HasIndex("ShipperId");

                    b.ToTable("HoSoShipper");
                });

            modelBuilder.Entity("DctApi.Shared.Models.HopDongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AvatarId")
                        .HasColumnType("integer");

                    b.Property<string>("CMND")
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .HasColumnType("text");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SDT")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("UserId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhoaDaoTaoEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("HuongDan")
                        .HasColumnType("text");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("KhoaDaoTao");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiCuaHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("DienGiai")
                        .HasColumnType("text");

                    b.Property<int?>("HinhAnhId")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("HinhAnhId");

                    b.ToTable("LoaiCuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiDanhGiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("LoaiDanhGia");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiSanPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("LoaiSanPham");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CauHoiId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool>("Dung")
                        .HasColumnType("boolean");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CauHoiId");

                    b.ToTable("LuaChonTracNghiem");
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DiaChiId");

                    b.ToTable("NhaSanXuat");
                });

            modelBuilder.Entity("DctApi.Shared.Models.PhuongThucThanhToanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan");
                });

            modelBuilder.Entity("DctApi.Shared.Models.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("DonHangEntityId")
                        .HasColumnType("integer");

                    b.Property<float>("GiaSP")
                        .HasColumnType("real");

                    b.Property<int>("HinhSanPhamId")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiSPId")
                        .HasColumnType("integer");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<int>("NSXId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("NgaySanXuat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangEntityId");

                    b.HasIndex("HinhSanPhamId");

                    b.HasIndex("LoaiSPId");

                    b.HasIndex("NSXId");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("DongXe")
                        .HasColumnType("text");

                    b.Property<bool>("KichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool?>("LienKet")
                        .HasColumnType("boolean");

                    b.Property<string>("MaNganHang")
                        .HasColumnType("text");

                    b.Property<string>("SoTK")
                        .HasColumnType("text");

                    b.Property<string>("TenChuTk")
                        .HasColumnType("text");

                    b.Property<string>("TenNganHang")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TaiKhoanNganHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.ThoiGianMoCuaHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ChuNhat")
                        .HasColumnType("boolean");

                    b.Property<int?>("CuaHangId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("GioDongCuaCN")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT2")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT3")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT4")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT5")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT6")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioDongCuaT7")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaCN")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT2")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT3")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT4")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT5")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT6")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioMoCuaT7")
                        .HasColumnType("interval");

                    b.Property<bool>("ThuBa")
                        .HasColumnType("boolean");

                    b.Property<bool>("ThuBay")
                        .HasColumnType("boolean");

                    b.Property<bool>("ThuHai")
                        .HasColumnType("boolean");

                    b.Property<bool>("ThuNam")
                        .HasColumnType("boolean");

                    b.Property<bool>("ThuSau")
                        .HasColumnType("boolean");

                    b.Property<bool>("ThuTu")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ThoiGianCuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TrangThaiDonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDonHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<int?>("AvatarId")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("DiaChiId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("DiaChiId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietCuaHang", b =>
                {
                    b.HasOne("DctApi.Shared.Models.ThoiGianMoCuaHang", "ThoiGian")
                        .WithMany()
                        .HasForeignKey("ThoiGianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietDonHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.SanPhamEntity", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.ChiTietCuaHang", "ChiTietCuaHang")
                        .WithMany()
                        .HasForeignKey("ChiTietCuaHangId");

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChiCuaHang")
                        .WithMany()
                        .HasForeignKey("DiaChiCuaHangId");

                    b.HasOne("DctApi.Shared.Models.LoaiCuaHangEntity", "LoaiCH")
                        .WithMany()
                        .HasForeignKey("LoaiCHId");

                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangSanPhamEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CuaHangEntity", "CuaHang")
                        .WithMany("CuaHangSanPham")
                        .HasForeignKey("CuaHangId")
                        .HasConstraintName("FK__CuaHangSanPham__CuaHang__43D61337")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.SanPhamEntity", "SanPham")
                        .WithMany("CuaHangSanPham")
                        .HasForeignKey("SanPhamId")
                        .HasConstraintName("FK__CuaHangSanPham__SanPham___42E1EEFE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiDanhGiaEntity", "LoaiDG")
                        .WithMany()
                        .HasForeignKey("LoaiDGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CuaHangEntity", "CuaHang")
                        .WithMany()
                        .HasForeignKey("CuaHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChiGiao")
                        .WithMany()
                        .HasForeignKey("DiaChiGiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.KhachHangEntity", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.PhuongThucThanhToanEntity", "PTTT")
                        .WithMany()
                        .HasForeignKey("PTTTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.ShipperEntity", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("DctApi.Shared.Models.TrangThaiDonHangEntity", "TTDH")
                        .WithMany()
                        .HasForeignKey("TTDHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.HinhAnhEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.ChiTietCuaHang", null)
                        .WithMany("AnhQuan")
                        .HasForeignKey("ChiTietCuaHangId");

                    b.HasOne("DctApi.Shared.Models.CuaHangEntity", null)
                        .WithMany("HinhChungMinhNhanDan")
                        .HasForeignKey("CuaHangEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatSau")
                        .WithMany()
                        .HasForeignKey("BHXMatSauId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BHXMatTruocId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatSau")
                        .WithMany()
                        .HasForeignKey("BLXMatSauId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BLXMatTruocId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatSau")
                        .WithMany()
                        .HasForeignKey("CMNDMatSauId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatTruoc")
                        .WithMany()
                        .HasForeignKey("CMNDMatTruocId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatSau")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatSauId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatTruoc")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatTruocId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayKiemTraXe")
                        .WithMany()
                        .HasForeignKey("GiayKiemTraXeId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDau")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDauId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDuoi")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDuoiId");

                    b.HasOne("DctApi.Shared.Models.ShipperEntity", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiCuaHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "HinhAnh")
                        .WithMany()
                        .HasForeignKey("HinhAnhId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CauHoiTracNghiemEntity", "CauHoi")
                        .WithMany("DanhSachLuaChon")
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", null)
                        .WithMany("ListSanPham")
                        .HasForeignKey("DonHangEntityId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "HinhSanPham")
                        .WithMany()
                        .HasForeignKey("HinhSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiSanPhamEntity", "LoaiSP")
                        .WithMany()
                        .HasForeignKey("LoaiSPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.NhaSanXuatEntity", "NSX")
                        .WithMany()
                        .HasForeignKey("NSXId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DctApi.Shared.Models.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DctApi.Shared.Models.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
