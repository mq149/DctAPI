// <auto-generated />
using System;
using DctAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DctAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211219050442_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DctApi.Shared.Models.CauHoiTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("CauHoiTracNghiem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoiDung = "Sơ đồ nào sau đây phù hợp với thiết kế động?"
                        },
                        new
                        {
                            Id = 2,
                            NoiDung = "1+2=?"
                        },
                        new
                        {
                            Id = 3,
                            NoiDung = "Vai trò nào không có trong ĐI CHỢ THUÊ"
                        },
                        new
                        {
                            Id = 4,
                            NoiDung = "Trong sơ đồ class, quan hệ aggregration được thể hiện bằng"
                        },
                        new
                        {
                            Id = 5,
                            NoiDung = "Trong mô hình MVC, View đóng vai trò"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietDonHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<float>("DonGia")
                        .HasColumnType("real");

                    b.Property<int>("DonHangID")
                        .HasColumnType("integer");

                    b.Property<float>("KhoiLuong")
                        .HasColumnType("real");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("LoaiCHID")
                        .HasColumnType("integer");

                    b.Property<string>("TenCuaHang")
                        .HasColumnType("text");

                    b.Property<bool>("TrangThaiKichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("LoaiCHID");

                    b.HasIndex("UserEntityId");

                    b.ToTable("CuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangSanPhamEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("CuaHangID")
                        .HasColumnType("integer");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("CuaHangSanPham");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DonHangID")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiDGID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoDiem")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("DonHangID");

                    b.HasIndex("LoaiDGID");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DiaChiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Duong")
                        .HasColumnType("text");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("text");

                    b.Property<string>("SoNhaTo")
                        .HasColumnType("text");

                    b.Property<string>("TinhTP")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("XaPhuong")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiaChi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duong = "K3",
                            QuanHuyen = "Vĩnh Thạnh",
                            SoNhaTo = "12",
                            TinhTP = "Bình Định",
                            XaPhuong = "Vĩnh Sơn"
                        },
                        new
                        {
                            Id = 2,
                            Duong = "K3",
                            QuanHuyen = "Vĩnh Thạnh",
                            SoNhaTo = "12",
                            TinhTP = "Bình Định",
                            XaPhuong = "Vĩnh Sơn"
                        },
                        new
                        {
                            Id = 3,
                            Duong = "K3",
                            QuanHuyen = "Vĩnh Thạnh",
                            SoNhaTo = "12",
                            TinhTP = "Bình Định",
                            XaPhuong = "Vĩnh Sơn"
                        },
                        new
                        {
                            Id = 4,
                            Duong = "K3",
                            QuanHuyen = "Vĩnh Thạnh",
                            SoNhaTo = "12",
                            TinhTP = "Bình Định",
                            XaPhuong = "Vĩnh Sơn"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("CuaHangID")
                        .HasColumnType("integer");

                    b.Property<int?>("DiaChiGiaoId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("KhachHangID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("NgayMuaHang")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PTTTId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("ShipperID")
                        .HasColumnType("integer");

                    b.Property<int?>("TTDHId")
                        .HasColumnType("integer");

                    b.Property<float>("TongTien")
                        .HasColumnType("real");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("DiaChiGiaoId");

                    b.HasIndex("PTTTId");

                    b.HasIndex("TTDHId");

                    b.ToTable("DonHang");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CuaHangID = 1,
                            DiaChiGiaoId = 1,
                            KhachHangID = 1,
                            NgayGiao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayMuaHang = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PTTTId = 1,
                            ShipperID = 1,
                            TTDHId = 1,
                            TongTien = 0f
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.HinhAnhEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HinhAnh");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MoTa = "Nuoc muoi sinh ly",
                            Url = "Binh"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BHXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("BHXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXHang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BLXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("BLXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXSo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CMNDMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("CMNDMatTruocId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CMNDNgayCap")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CMNDNoiCap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<decimal?>("DiemBaiKiemTra")
                        .HasColumnType("numeric");

                    b.Property<int>("GiayDKXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("GiayDKXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<int>("GiayKiemTraXeId")
                        .HasColumnType("integer");

                    b.Property<int>("NamSxXe")
                        .HasColumnType("integer");

                    b.Property<string>("NgheNghiep")
                        .HasColumnType("text");

                    b.Property<int>("PhuongTienHinhDauId")
                        .HasColumnType("integer");

                    b.Property<int>("PhuongTienHinhDuoiId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BHXMatSauId");

                    b.HasIndex("BHXMatTruocId");

                    b.HasIndex("BLXMatSauId");

                    b.HasIndex("BLXMatTruocId");

                    b.HasIndex("CMNDMatSauId");

                    b.HasIndex("CMNDMatTruocId");

                    b.HasIndex("GiayDKXMatSauId");

                    b.HasIndex("GiayDKXMatTruocId");

                    b.HasIndex("GiayKiemTraXeId");

                    b.HasIndex("PhuongTienHinhDauId");

                    b.HasIndex("PhuongTienHinhDuoiId");

                    b.ToTable("HoSoShipper");
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserEntityId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhoaDaoTaoEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("HuongDan")
                        .HasColumnType("text");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("KhoaDaoTao");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HuongDan = "Vui lòng xem video hướng dẫn để làm bài kiểm tra.",
                            NoiDung = "Khoá đào tạo shipper Đi Chợ Thuê",
                            URL = "www.google.com"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiCuaHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("LoaiCuaHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiDanhGiaEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("LoaiDanhGia");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiSanPhamEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("LoaiSanPham");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ten = "Đồ khô"
                        },
                        new
                        {
                            ID = 2,
                            Ten = "Nước Giải Khát"
                        },
                        new
                        {
                            ID = 3,
                            Ten = "Thực phẩm chức năng"
                        },
                        new
                        {
                            ID = 4,
                            Ten = "Hải sản"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CauHoiId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool>("Dung")
                        .HasColumnType("boolean");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CauHoiId");

                    b.ToTable("LuaChonTracNghiem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Class diagram"
                        },
                        new
                        {
                            Id = 2,
                            CauHoiId = 1,
                            Dung = true,
                            NoiDung = "Sequence diagram"
                        },
                        new
                        {
                            Id = 3,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Use case diagram"
                        },
                        new
                        {
                            Id = 4,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Package diagram"
                        },
                        new
                        {
                            Id = 5,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "1"
                        },
                        new
                        {
                            Id = 6,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "2"
                        },
                        new
                        {
                            Id = 7,
                            CauHoiId = 2,
                            Dung = true,
                            NoiDung = "3"
                        },
                        new
                        {
                            Id = 8,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "4"
                        },
                        new
                        {
                            Id = 9,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Shipper"
                        },
                        new
                        {
                            Id = 10,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Khách hàng"
                        },
                        new
                        {
                            Id = 11,
                            CauHoiId = 3,
                            Dung = true,
                            NoiDung = "Nhân viên kho"
                        },
                        new
                        {
                            Id = 12,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Cửa hàng"
                        },
                        new
                        {
                            Id = 13,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Mũi tên"
                        },
                        new
                        {
                            Id = 14,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Đường nối"
                        },
                        new
                        {
                            Id = 15,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Hình thoi đen"
                        },
                        new
                        {
                            Id = 16,
                            CauHoiId = 4,
                            Dung = true,
                            NoiDung = "Hình thoi trắng"
                        },
                        new
                        {
                            Id = 17,
                            CauHoiId = 5,
                            Dung = true,
                            NoiDung = "Gửi request đến và nhận response từ Controller"
                        },
                        new
                        {
                            Id = 18,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Cập nhật giao diện"
                        },
                        new
                        {
                            Id = 19,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Kiểm tra logic dữ liệu"
                        },
                        new
                        {
                            Id = 20,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Lưu trữ dữ liệu vào database"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("DiaChiId");

                    b.ToTable("NhaSanXuat");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DiaChiId = 1,
                            Ten = "Long Van"
                        },
                        new
                        {
                            ID = 2,
                            DiaChiId = 1,
                            Ten = "Long Van"
                        },
                        new
                        {
                            ID = 3,
                            DiaChiId = 1,
                            Ten = "Long Van"
                        },
                        new
                        {
                            ID = 4,
                            DiaChiId = 1,
                            Ten = "Long Van"
                        },
                        new
                        {
                            ID = 5,
                            DiaChiId = 1,
                            Ten = "Long Van"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.PhuongThucThanhToanEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("PhuongThucThanhToan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ten = "online"
                        },
                        new
                        {
                            ID = 2,
                            Ten = "Tiền Mặt"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.RoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ten = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Ten = "Cửa Hàng"
                        },
                        new
                        {
                            ID = 3,
                            Ten = "Shipper"
                        },
                        new
                        {
                            ID = 4,
                            Ten = "Khách Hàng"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<float>("GiaSP")
                        .HasColumnType("real");

                    b.Property<int>("HinhSanPhamId")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiSPId")
                        .HasColumnType("integer");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<int>("NSXId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("HinhSanPhamId");

                    b.HasIndex("LoaiSPId");

                    b.HasIndex("NSXId");

                    b.ToTable("SanPham");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            GiaSP = 123f,
                            HinhSanPhamId = 1,
                            LoaiSPId = 1,
                            MoTa = "rất ngon và rẻ",
                            NSXId = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Cá Thu"
                        },
                        new
                        {
                            ID = 2,
                            GiaSP = 123f,
                            HinhSanPhamId = 1,
                            LoaiSPId = 1,
                            MoTa = "rất ngon và rẻ",
                            NSXId = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Cá Thu"
                        },
                        new
                        {
                            ID = 3,
                            GiaSP = 123f,
                            HinhSanPhamId = 1,
                            LoaiSPId = 1,
                            MoTa = "rất ngon và rẻ",
                            NSXId = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Cá Thu"
                        },
                        new
                        {
                            ID = 4,
                            GiaSP = 123f,
                            HinhSanPhamId = 1,
                            LoaiSPId = 1,
                            MoTa = "rất ngon và rẻ",
                            NSXId = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Cá Thu"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("DongXe")
                        .HasColumnType("text");

                    b.Property<bool>("KichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool>("LienKet")
                        .HasColumnType("boolean");

                    b.Property<string>("MaNganHang")
                        .HasColumnType("text");

                    b.Property<string>("SoTK")
                        .HasColumnType("text");

                    b.Property<string>("TenChuTk")
                        .HasColumnType("text");

                    b.Property<string>("TenNganHang")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("TaiKhoanNganHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TrangThaiDonHangEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.ToTable("TrangThaiDonHang");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ten = "Chờ xác nhận"
                        },
                        new
                        {
                            ID = 2,
                            Ten = "Cửa hàng đã xác nhận"
                        },
                        new
                        {
                            ID = 3,
                            Ten = "Đang lấy hàng"
                        },
                        new
                        {
                            ID = 4,
                            Ten = "Đang giao hàng"
                        },
                        new
                        {
                            ID = 5,
                            Ten = "Đã giao hàng"
                        },
                        new
                        {
                            ID = 6,
                            Ten = "Đã huỷ"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AvatarIdId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("DiaChiIdId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RoleID")
                        .HasColumnType("integer");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("AvatarIdId");

                    b.HasIndex("DiaChiIdId");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.LoaiCuaHangEntity", "LoaiCH")
                        .WithMany()
                        .HasForeignKey("LoaiCHID");

                    b.HasOne("DctApi.Shared.Models.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiDanhGiaEntity", "LoaiDG")
                        .WithMany()
                        .HasForeignKey("LoaiDGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChiGiao")
                        .WithMany()
                        .HasForeignKey("DiaChiGiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.PhuongThucThanhToanEntity", "PTTT")
                        .WithMany()
                        .HasForeignKey("PTTTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.TrangThaiDonHangEntity", "TTDH")
                        .WithMany()
                        .HasForeignKey("TTDHId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatSau")
                        .WithMany()
                        .HasForeignKey("BHXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BHXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatSau")
                        .WithMany()
                        .HasForeignKey("BLXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BLXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatSau")
                        .WithMany()
                        .HasForeignKey("CMNDMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatTruoc")
                        .WithMany()
                        .HasForeignKey("CMNDMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatSau")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatTruoc")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayKiemTraXe")
                        .WithMany()
                        .HasForeignKey("GiayKiemTraXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDau")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDuoi")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDuoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CauHoiTracNghiemEntity", "CauHoi")
                        .WithMany("DanhSachLuaChon")
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "HinhSanPham")
                        .WithMany()
                        .HasForeignKey("HinhSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiSanPhamEntity", "LoaiSP")
                        .WithMany()
                        .HasForeignKey("LoaiSPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.NhaSanXuatEntity", "NSX")
                        .WithMany()
                        .HasForeignKey("NSXId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "AvatarId")
                        .WithMany()
                        .HasForeignKey("AvatarIdId");

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChiId")
                        .WithMany()
                        .HasForeignKey("DiaChiIdId");

                    b.HasOne("DctApi.Shared.Models.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
