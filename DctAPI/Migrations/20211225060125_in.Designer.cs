// <auto-generated />
using System;
using DctAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DctAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211225060125_in")]
    partial class @in
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DctApi.Shared.Models.CauHoiTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("CauHoiTracNghiem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoiDung = "Sơ đồ nào sau đây phù hợp với thiết kế động?"
                        },
                        new
                        {
                            Id = 2,
                            NoiDung = "1+2=?"
                        },
                        new
                        {
                            Id = 3,
                            NoiDung = "Vai trò nào không có trong ĐI CHỢ THUÊ"
                        },
                        new
                        {
                            Id = 4,
                            NoiDung = "Trong sơ đồ class, quan hệ aggregration được thể hiện bằng"
                        },
                        new
                        {
                            Id = 5,
                            NoiDung = "Trong mô hình MVC, View đóng vai trò"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietDonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<float>("DonGia")
                        .HasColumnType("real");

                    b.Property<int>("DonHangId")
                        .HasColumnType("integer");

                    b.Property<float>("KhoiLuong")
                        .HasColumnType("real");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietDonHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DonGia = 37000f,
                            DonHangId = 1,
                            KhoiLuong = 1f,
                            SanPhamId = 1,
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 2,
                            DonGia = 25000f,
                            DonHangId = 1,
                            KhoiLuong = 1f,
                            SanPhamId = 2,
                            SoLuong = 2
                        },
                        new
                        {
                            Id = 3,
                            DonGia = 500000f,
                            DonHangId = 2,
                            KhoiLuong = 1f,
                            SanPhamId = 1,
                            SoLuong = 5
                        },
                        new
                        {
                            Id = 4,
                            DonGia = 210000f,
                            DonHangId = 2,
                            KhoiLuong = 1f,
                            SanPhamId = 2,
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 5,
                            DonGia = 210000f,
                            DonHangId = 2,
                            KhoiLuong = 1f,
                            SanPhamId = 3,
                            SoLuong = 2
                        },
                        new
                        {
                            Id = 6,
                            DonGia = 43000f,
                            DonHangId = 3,
                            KhoiLuong = 1f,
                            SanPhamId = 1,
                            SoLuong = 1
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("LoaiCHID")
                        .HasColumnType("integer");

                    b.Property<string>("TenCuaHang")
                        .HasColumnType("text");

                    b.Property<bool>("TrangThaiKichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LoaiCHID");

                    b.HasIndex("UserId");

                    b.ToTable("CuaHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LoaiCHID = 1,
                            TenCuaHang = "Bách Hóa X",
                            TrangThaiKichHoat = true,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            LoaiCHID = 1,
                            TenCuaHang = "Co-op Mart Cống Quỳnh",
                            TrangThaiKichHoat = true,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangSanPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("CuaHangID")
                        .HasColumnType("integer");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("CuaHangSanPham");
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DonHangId")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiDGId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoDiem")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("LoaiDGId");

                    b.ToTable("DanhGia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DonHangId = 1,
                            LoaiDGId = 1,
                            NgayDanhGia = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiDung = "Tốt",
                            SoDiem = 5
                        },
                        new
                        {
                            Id = 2,
                            DonHangId = 1,
                            LoaiDGId = 2,
                            NgayDanhGia = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiDung = "Tạm được",
                            SoDiem = 4
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.DiaChiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Duong")
                        .HasColumnType("text");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("text");

                    b.Property<string>("SoNhaTo")
                        .HasColumnType("text");

                    b.Property<string>("TinhTP")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("XaPhuong")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiaChi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duong = "Hoàng Diệu",
                            QuanHuyen = "Quận 4",
                            SoNhaTo = "29",
                            TinhTP = "TP Hồ Chí Minh",
                            XaPhuong = "Phường 1"
                        },
                        new
                        {
                            Id = 2,
                            Duong = "Ba Tháng Hai",
                            QuanHuyen = "Quận 10",
                            SoNhaTo = "69",
                            TinhTP = "TP Hồ Chí Minh",
                            XaPhuong = "Phường 10"
                        },
                        new
                        {
                            Id = 3,
                            Duong = "Lý Thường Kiệt",
                            QuanHuyen = "Quận 10",
                            SoNhaTo = "19",
                            TinhTP = "TP Hồ Chí Minh",
                            XaPhuong = "Phường 3"
                        },
                        new
                        {
                            Id = 4,
                            Duong = "K3",
                            QuanHuyen = "Vĩnh Thạnh",
                            SoNhaTo = "12",
                            TinhTP = "Bình Định",
                            XaPhuong = "Vĩnh Sơn"
                        },
                        new
                        {
                            Id = 5,
                            Duong = "Nguyễn Văn Cừ",
                            QuanHuyen = "Quận 5",
                            SoNhaTo = "227",
                            TinhTP = "TP. HCM",
                            XaPhuong = "Phường 4"
                        },
                        new
                        {
                            Id = 6,
                            Duong = "Cống Quỳnh",
                            QuanHuyen = "Quận 1",
                            SoNhaTo = "189C",
                            TinhTP = "TP. HCM",
                            XaPhuong = "Nguyễn Cư Trinh"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("CuaHangId")
                        .HasColumnType("integer");

                    b.Property<int>("DiaChiGiaoId")
                        .HasColumnType("integer");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("NgayMuaHang")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PTTTId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("integer");

                    b.Property<int>("TTDHId")
                        .HasColumnType("integer");

                    b.Property<float>("TongTien")
                        .HasColumnType("real");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CuaHangId");

                    b.HasIndex("DiaChiGiaoId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("PTTTId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("TTDHId");

                    b.ToTable("DonHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuaHangId = 1,
                            DiaChiGiaoId = 1,
                            KhachHangId = 1,
                            NgayGiao = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayMuaHang = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PTTTId = 1,
                            ShipperId = 1,
                            TTDHId = 5,
                            TongTien = 87000f
                        },
                        new
                        {
                            Id = 2,
                            CuaHangId = 1,
                            DiaChiGiaoId = 2,
                            KhachHangId = 1,
                            NgayGiao = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayMuaHang = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PTTTId = 1,
                            TTDHId = 2,
                            TongTien = 920000f
                        },
                        new
                        {
                            Id = 3,
                            CuaHangId = 2,
                            DiaChiGiaoId = 2,
                            KhachHangId = 2,
                            NgayGiao = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayMuaHang = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PTTTId = 2,
                            TTDHId = 2,
                            TongTien = 43000f
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.HinhAnhEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HinhAnh");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "shorts",
                            Url = "https://i.ibb.co/4ZN1Rqd/shorts.png"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "trousers",
                            Url = "https://i.ibb.co/JpWst3h/trousers.png"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "shirt",
                            Url = "https://i.ibb.co/KDm7xG1/shirt.png"
                        },
                        new
                        {
                            Id = 4,
                            Ten = "tie",
                            Url = "https://i.ibb.co/YpxxV8L/tie.png"
                        },
                        new
                        {
                            Id = 5,
                            Ten = "sweater",
                            Url = "https://i.ibb.co/hY1ft7r/sweater1.png"
                        },
                        new
                        {
                            Id = 6,
                            Ten = "shoes",
                            Url = "https://i.ibb.co/djqfkpN/shoes.png"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BHXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("BHXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXHang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BLXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("BLXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<string>("BLXSo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CMNDMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("CMNDMatTruocId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CMNDNgayCap")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CMNDNoiCap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<decimal?>("DiemBaiKiemTra")
                        .HasColumnType("numeric");

                    b.Property<int>("GiayDKXMatSauId")
                        .HasColumnType("integer");

                    b.Property<int>("GiayDKXMatTruocId")
                        .HasColumnType("integer");

                    b.Property<int>("GiayKiemTraXeId")
                        .HasColumnType("integer");

                    b.Property<int>("NamSXXe")
                        .HasColumnType("integer");

                    b.Property<string>("NgheNghiep")
                        .HasColumnType("text");

                    b.Property<int>("PhuongTienHinhDauId")
                        .HasColumnType("integer");

                    b.Property<int>("PhuongTienHinhDuoiId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("BHXMatSauId");

                    b.HasIndex("BHXMatTruocId");

                    b.HasIndex("BLXMatSauId");

                    b.HasIndex("BLXMatTruocId");

                    b.HasIndex("CMNDMatSauId");

                    b.HasIndex("CMNDMatTruocId");

                    b.HasIndex("GiayDKXMatSauId");

                    b.HasIndex("GiayDKXMatTruocId");

                    b.HasIndex("GiayKiemTraXeId");

                    b.HasIndex("PhuongTienHinhDauId");

                    b.HasIndex("PhuongTienHinhDuoiId");

                    b.ToTable("HoSoShipper");
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("KhachHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CMND = "18219821",
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            CMND = "5361152421",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhoaDaoTaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("HuongDan")
                        .HasColumnType("text");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("KhoaDaoTao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HuongDan = "Vui lòng xem video hướng dẫn để làm bài kiểm tra.",
                            NoiDung = "Khoá đào tạo shipper Đi Chợ Thuê",
                            URL = "https://www.youtube.com/embed/LcRG816Syvc"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiCuaHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("LoaiCuaHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Bán sỉ"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Bán lẻ"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "Bán quà lưu niệm"
                        },
                        new
                        {
                            Id = 4,
                            Ten = "Bán online"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiDanhGiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("LoaiDanhGia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Shipper"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Cửa hàng"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LoaiSanPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("LoaiSanPham");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Thức ăn"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Nước Giải Khát"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "Thực phẩm chức năng"
                        },
                        new
                        {
                            Id = 4,
                            Ten = "Hải sản"
                        },
                        new
                        {
                            Id = 5,
                            Ten = "Đồ dùng"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CauHoiId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool>("Dung")
                        .HasColumnType("boolean");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CauHoiId");

                    b.ToTable("LuaChonTracNghiem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Class diagram"
                        },
                        new
                        {
                            Id = 2,
                            CauHoiId = 1,
                            Dung = true,
                            NoiDung = "Sequence diagram"
                        },
                        new
                        {
                            Id = 3,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Use case diagram"
                        },
                        new
                        {
                            Id = 4,
                            CauHoiId = 1,
                            Dung = false,
                            NoiDung = "Package diagram"
                        },
                        new
                        {
                            Id = 5,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "1"
                        },
                        new
                        {
                            Id = 6,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "2"
                        },
                        new
                        {
                            Id = 7,
                            CauHoiId = 2,
                            Dung = true,
                            NoiDung = "3"
                        },
                        new
                        {
                            Id = 8,
                            CauHoiId = 2,
                            Dung = false,
                            NoiDung = "4"
                        },
                        new
                        {
                            Id = 9,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Shipper"
                        },
                        new
                        {
                            Id = 10,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Khách hàng"
                        },
                        new
                        {
                            Id = 11,
                            CauHoiId = 3,
                            Dung = true,
                            NoiDung = "Nhân viên kho"
                        },
                        new
                        {
                            Id = 12,
                            CauHoiId = 3,
                            Dung = false,
                            NoiDung = "Cửa hàng"
                        },
                        new
                        {
                            Id = 13,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Mũi tên"
                        },
                        new
                        {
                            Id = 14,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Đường nối"
                        },
                        new
                        {
                            Id = 15,
                            CauHoiId = 4,
                            Dung = false,
                            NoiDung = "Hình thoi đen"
                        },
                        new
                        {
                            Id = 16,
                            CauHoiId = 4,
                            Dung = true,
                            NoiDung = "Hình thoi trắng"
                        },
                        new
                        {
                            Id = 17,
                            CauHoiId = 5,
                            Dung = true,
                            NoiDung = "Gửi request đến và nhận response từ Controller"
                        },
                        new
                        {
                            Id = 18,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Cập nhật giao diện"
                        },
                        new
                        {
                            Id = 19,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Kiểm tra logic dữ liệu"
                        },
                        new
                        {
                            Id = 20,
                            CauHoiId = 5,
                            Dung = false,
                            NoiDung = "Lưu trữ dữ liệu vào database"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DiaChiId");

                    b.ToTable("NhaSanXuat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChiId = 1,
                            Ten = "Công ty TNHH X"
                        },
                        new
                        {
                            Id = 2,
                            DiaChiId = 2,
                            Ten = "Công ty Y"
                        },
                        new
                        {
                            Id = 3,
                            DiaChiId = 3,
                            Ten = "Công ty Z"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.PhuongThucThanhToanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Tiền mặt"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Thẻ ATM"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "Ví điện tử"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Cửa Hàng"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "Shipper"
                        },
                        new
                        {
                            Id = 4,
                            Ten = "Khách Hàng"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("DonHangEntityId")
                        .HasColumnType("integer");

                    b.Property<float>("GiaSP")
                        .HasColumnType("real");

                    b.Property<int>("HinhSanPhamID")
                        .HasColumnType("integer");

                    b.Property<int>("LoaiSPID")
                        .HasColumnType("integer");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<int>("NSXID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("DonHangEntityId");

                    b.HasIndex("HinhSanPhamID");

                    b.HasIndex("LoaiSPID");

                    b.HasIndex("NSXID");

                    b.ToTable("SanPham");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GiaSP = 120000f,
                            HinhSanPhamID = 1,
                            LoaiSPID = 4,
                            MoTa = "Rất ngon và rẻ",
                            NSXID = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 0,
                            Ten = "Cá Thu"
                        },
                        new
                        {
                            Id = 2,
                            GiaSP = 12000f,
                            HinhSanPhamID = 1,
                            LoaiSPID = 1,
                            MoTa = "Không ngon đâu",
                            NSXID = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 0,
                            Ten = "Cà Rốt"
                        },
                        new
                        {
                            Id = 3,
                            GiaSP = 120000f,
                            HinhSanPhamID = 1,
                            LoaiSPID = 3,
                            MoTa = "C",
                            NSXID = 1,
                            NgaySanXuat = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 0,
                            Ten = "Vitamin C"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CMND")
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("DongXe")
                        .HasColumnType("text");

                    b.Property<bool>("KichHoat")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Shipper");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BienSo = "85D2-12111",
                            CMND = "18277821",
                            DongXe = "Wave",
                            KichHoat = true,
                            UserID = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BienSo = "00A0-0000",
                            CMND = "000111222",
                            DongXe = "Honda Wave",
                            KichHoat = true,
                            UserID = 0,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<bool>("LienKet")
                        .HasColumnType("boolean");

                    b.Property<string>("MaNganHang")
                        .HasColumnType("text");

                    b.Property<string>("SoTK")
                        .HasColumnType("text");

                    b.Property<string>("TenChuTk")
                        .HasColumnType("text");

                    b.Property<string>("TenNganHang")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("TaiKhoanNganHang");
                });

            modelBuilder.Entity("DctApi.Shared.Models.TrangThaiDonHangEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Ten")
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDonHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ten = "Chờ xác nhận"
                        },
                        new
                        {
                            Id = 2,
                            Ten = "Cửa hàng đã xác nhận"
                        },
                        new
                        {
                            Id = 3,
                            Ten = "Đang lấy hàng"
                        },
                        new
                        {
                            Id = 4,
                            Ten = "Đang giao hàng"
                        },
                        new
                        {
                            Id = 5,
                            Ten = "Đã giao hàng"
                        },
                        new
                        {
                            Id = 6,
                            Ten = "Đã huỷ"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AvatarId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("DiaChiId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChiId = 1,
                            Email = "x@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Nguyễn Văn X",
                            MatKhau = "123",
                            NgaySinh = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = 1,
                            SDT = "0123"
                        },
                        new
                        {
                            Id = 2,
                            DiaChiId = 1,
                            Email = "y@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Nguyễn Văn Y",
                            MatKhau = "123",
                            NgaySinh = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = 2,
                            SDT = "0123"
                        },
                        new
                        {
                            Id = 3,
                            DiaChiId = 5,
                            Email = "khachhangA@email.com",
                            HoTen = "Khách hàng A",
                            MatKhau = "123456",
                            RoleId = 4,
                            SDT = "0123123123"
                        },
                        new
                        {
                            Id = 4,
                            DiaChiId = 6,
                            Email = "cuahangcoop@email.com",
                            HoTen = "Cua Hang Co-op Mart",
                            MatKhau = "123456",
                            RoleId = 2,
                            SDT = "0123456789"
                        },
                        new
                        {
                            Id = 5,
                            DiaChiId = 1,
                            Email = "shipper687@email.com",
                            HoTen = "Bùi Minh Quân",
                            MatKhau = "123456",
                            RoleId = 3,
                            SDT = "0124759324"
                        },
                        new
                        {
                            Id = 6,
                            DiaChiId = 3,
                            Email = "khachhangB@email.com",
                            HoTen = "Khách hàng B",
                            MatKhau = "123456",
                            RoleId = 4,
                            SDT = "0482745323"
                        });
                });

            modelBuilder.Entity("DctApi.Shared.Models.ChiTietDonHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.SanPhamEntity", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.CuaHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.LoaiCuaHangEntity", "LoaiCH")
                        .WithMany()
                        .HasForeignKey("LoaiCHID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.DanhGiaEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiDanhGiaEntity", "LoaiDG")
                        .WithMany()
                        .HasForeignKey("LoaiDGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.DonHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CuaHangEntity", "CuaHang")
                        .WithMany()
                        .HasForeignKey("CuaHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChiGiao")
                        .WithMany()
                        .HasForeignKey("DiaChiGiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.KhachHangEntity", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.PhuongThucThanhToanEntity", "PTTT")
                        .WithMany()
                        .HasForeignKey("PTTTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.ShipperEntity", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("DctApi.Shared.Models.TrangThaiDonHangEntity", "TTDH")
                        .WithMany()
                        .HasForeignKey("TTDHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.HoSoShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatSau")
                        .WithMany()
                        .HasForeignKey("BHXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BHXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BHXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatSau")
                        .WithMany()
                        .HasForeignKey("BLXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "BLXMatTruoc")
                        .WithMany()
                        .HasForeignKey("BLXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatSau")
                        .WithMany()
                        .HasForeignKey("CMNDMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "CMNDMatTruoc")
                        .WithMany()
                        .HasForeignKey("CMNDMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatSau")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatSauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayDKXMatTruoc")
                        .WithMany()
                        .HasForeignKey("GiayDKXMatTruocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "GiayKiemTraXe")
                        .WithMany()
                        .HasForeignKey("GiayKiemTraXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDau")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "PhuongTienHinhDuoi")
                        .WithMany()
                        .HasForeignKey("PhuongTienHinhDuoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.KhachHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.LuaChonTracNghiemEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.CauHoiTracNghiemEntity", "CauHoi")
                        .WithMany("DanhSachLuaChon")
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.NhaSanXuatEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.SanPhamEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.DonHangEntity", null)
                        .WithMany("ListSanPham")
                        .HasForeignKey("DonHangEntityId");

                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "HinhSanPham")
                        .WithMany()
                        .HasForeignKey("HinhSanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.LoaiSanPhamEntity", "LoaiSP")
                        .WithMany()
                        .HasForeignKey("LoaiSPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.NhaSanXuatEntity", "NSX")
                        .WithMany()
                        .HasForeignKey("NSXID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.ShipperEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DctApi.Shared.Models.TaiKhoanNganHangEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DctApi.Shared.Models.UserEntity", b =>
                {
                    b.HasOne("DctApi.Shared.Models.HinhAnhEntity", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("DctApi.Shared.Models.DiaChiEntity", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DctApi.Shared.Models.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
